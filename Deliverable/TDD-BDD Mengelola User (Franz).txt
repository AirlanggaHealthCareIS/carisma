Story Card : Mengelola User
Scenario : Insert User berhasil

getUser(ui):TableModel user					|assertTrue(resultRowCount);
getUser():ArrayList<User> user					|assertEquals(expectedUsers, resultUsers);
setTableModel(Model)						|-
insertUser(ui, username,pass, date, role):boolean 		|assertEquals(expectedCondition, resultCondiditon);
insertUser(user):boolean					|assertEquals(expectedCondition, resultConndition);
getUser(ui):TableModel user					|assertTrue(resultRowCount);
getUser():ArrayList<User> user					|assertEquals(expectedUsers, resultUsers);
setTableModel(Model)						|-
JOptionPane("Insert user berhasil")				|-

____________________________________________________________________________________________________________________
Story Card : Mengelola User
Scenario : Insert User gagal

getUser(ui):TableModel user					|assertTrue(resultRowCount);
getUser():User user						|assertEquals(expectedUsers, resultUsers);
setTableModel(Model)						|-
insertUser(ui, username,pass, date, role):boolean 		|assertEquals(expectedCondition, resultCondiditon);
insertUser(user):boolean					|assertEquals(expectedCondition, resultConndition);
JOptionPane("Insert user gagal")				|-

____________________________________________________________________________________________________________________
Story Card : Mengelola User
Scenario : Update User berhasil

getUser(ui):TableModel user					|assertTrue(resultRowCount);
getUser():ArrayList<User> user					|assertEquals(expectedUsers, resultUsers);
setTableModel(Model)						|-
updateUser(ui, username,pass, date, role):boolean 		|assertEquals(expectedCondition, resultCondiditon);
updateUser(user):boolean					|assertEquals(expectedCondition, resultConndition);
getUser(ui):TableModel user					|assertTrue(resultRowCount);
getUser():ArrayList<User> user					|assertEquals(expectedUsers, resultUsers);
setTableModel(Model)						|-
JOptionPane("Update user berhasil")				|-

____________________________________________________________________________________________________________________
Story Card : Mengelola User
Scenario : Update User gagal

getUser(ui):TableModel user					|assertTrue(resultRowCount);
getUser():ArrayList<User> user					|assertEquals(expectedUsers, resultUsers);
setTableModel(Model)						|-
updateUser(ui, username,pass, date, role):boolean 		|assertEquals(expectedCondition, resultCondiditon);
updateUser(user):boolean					|assertEquals(expectedCondition, resultConndition);
JOptionPane("Update user gagal")				|-

____________________________________________________________________________________________________________________
Story Card : Mengelola User
Scenario : Delete User berhasil

getUser(ui):TableModel user					|assertTrue(resultRowCount);
getUser():ArrayList<User> user					|assertEquals(expectedUsers, resultUsers);
setTableModel(Model)						|-
deleteUser(ui, username):boolean		 		|assertEquals(expectedCondition, resultCondiditon);
deleteUser(user):boolean					|assertEquals(expectedCondition, resultConndition);
getUser(ui):TableModel user					|assertTrue(resultRowCount);
getUser():ArrayList<User> user					|assertEquals(expectedUsers, resultUsers);
setTableModel(Model)						|-
JOptionPane("Delete user berhasil")				|-

____________________________________________________________________________________________________________________
Story Card : Mengelola User
Scenario : Insert User gagal

getUser(ui):TableModel user					|assertTrue(resultRowCount);
getUser():ArrayList<User> user					|assertEquals(expectedUsers, resultUsers);
setTableModel(Model)						|-
deleteUser(ui, username):boolean 				|assertEquals(expectedCondition, resultCondiditon);
deleteUser(user):boolean					|assertEquals(expectedCondition, resultConndition);
JOptionPane("Delete user gagal")				|-

____________________________________________________________________________________________________________________